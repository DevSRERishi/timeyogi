version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: task-management-postgres
    environment:
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpassword
      POSTGRES_DB: taskmanagement
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-management-backend
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taskmanagement
      - DB_USER=taskuser
      - DB_PASSWORD=taskpassword
    ports:
      - "5001:5000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-management-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    restart: unless-stopped
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: task-management-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: 